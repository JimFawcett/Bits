C:\github\JimFawcett\Bits\Cpp\Cpp_Objects\build
> Debug/Cpp_Objects.exe

  Demonstrate C++ Objects

  --------------------------------------------------
    primitive C++ types size_t and double
  --------------------------------------------------
  size_t st = 42
  st type: unsigned __int64
  size:  8

  double d = 3.14159
  ld type: double
  size:  8

  --------------------------------------------------
    std library types string and vector<T>
  --------------------------------------------------
  contents of str = "Wile E. Coyote"
  --- showType(str, "str"); ---
  str type: class std::basic_string<char,struct std:...
  size:  40

  vector<T>: {
    3.5, 3, 2.5, 2
  }
  --- showType(vec, "vec"); ---
  vec type: class std::vector<double,class std::allo...
  size:  32

  --- vec[2] = -2.5; ---
  vec:
  vector<T>: {
    3.5, 3, -2.5, 2
  }
  --- auto vec2 = vec : copy construction ---
  vec2:
  vector<T>: {
    3.5, 3, -2.5, 2
  }
  --- vec2[0] = 42; ---
  vec2:
  vector<T>: {
    42, 3, -2.5, 2
  }
  vec:
  vector<T>: {
    3.5, 3, -2.5, 2
  }
  --------------------------------------------------
    Copy construction, auto vec2 = vec, creates
    independent instance. So changing target vec2
    has no affect on source vec.
  --------------------------------------------------

  --------------------------------------------------
    user-defined type Point4D
  --------------------------------------------------
  Point4D {
    0, 0, 0,
    Mon May  1 16:04:27 2023
  }
  Point4D {
    42, 0, -3.5,
    Mon May  1 16:04:27 2023
  }

  --- showType(p1, "p1", nl) ---
  p1 type: class Point4D
  size:  32
  p1.xCoor() returns value 42

  --------------------------------------------------
    heap-based string instance
  --------------------------------------------------
  --- pU<std::string> pStr(new std::string("\"Road Runner\"") ---
  pStr contents = "Road Runner"

  --- showType(*pStr, "*pStr") ---
  *pStr type: class std::basic_string<char,struct std:...
  size:  40

  --- showType(move(pStr), "pStr") ---
  pStr type: class std::unique_ptr<class std::basic_s...
  size:  8

  --------------------------------------------------
    heap-based vector instance
  --------------------------------------------------
  --- pU<std::vector<double>>
      pVec(new std::vector<double>{ 1.5, 2.5, 3.5 }); ---
  *pVec =
  vector<T>: {
    1.5, 2.5, 3.5
  }
  *pVec type: class std::vector<double,class std::allo...
  size:  32

  pVec = 000002897B682AC0
  move(pVec) type: class std::unique_ptr<class std::vector<...
  size:  8

  --------------------------------------------------
    heap-based Point4D instance
  --------------------------------------------------
  --- pU<Point4D> pPoint4D(new Point4D()) ---
  Point4D {
    0, 0, 0,
    Mon May  1 16:04:27 2023
  }
  Point4D {
    1, 2, -3,
    Mon May  1 16:04:27 2023
  }
  pPoint4D->zCoor() = -3
  --- showType(*pPoint4D, "*pPoint4D"); ---
  *pPoint4D type: class Point4D
  size:  32
  --- showType(std::move(pPoint4D), "pPoint4D"); ---
  pPoint4D type: class std::unique_ptr<class Point4D,stru...
  size:  8


  That's all Folks!

C:\github\JimFawcett\Bits\Cpp\Cpp_Objects\build
>
