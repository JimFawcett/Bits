-----------------------------------
  Demonstrate Copy Operations
-----------------------------------

--- int i = 42; ---
i: address: 0xb2f397e958
--- int j = i; // copy of value ---
j: address: 0xb2f397e948
--------------------------------------------------
  Addresses of i and j are unique, demonstrating
  value of i was copied to new j location.
--------------------------------------------------

--- List<int> li = new List<int> { 1, 2, 3, 2, 1 } ---       
li: address: 0xb2f397e938
--- List<int> lj = li  // copy of reference ---
lj: address: 0xb2f397e928
-------------------------------------------------------      
  Addresses of li and lj are adjacent, and adjacent to       
  addresses of i and j in the stack frame.

  That demonstrates that lj is a copy of the handle li       
  both of which point to the managed heap-based list
  instance.
-------------------------------------------------------      

--- lj.Add(-1) ---
lj: { 1, 2, 3, 2, 1, -1 }
li: { 1, 2, 3, 2, 1, -1 }
-------------------------------------------------------      
  Note: changing lj results in the same change to li.        
  This demonstrates that both variables refer to the
  same List<int> instance in the managed heap.
-------------------------------------------------------      

Using ReferenceEquals(li, lj) we find:

  li is same object as lj

